#!/usr/bin/env perl

use 5.010;
use JSON;

use Jet::Engine;
use Jet::Context;

use Data::Dumper;

sub update_person_recipe {
	my $data = {
		steps => [
			{
				plugin => 'Node::Stash',
				in => {
					method => 'children',
					params => {base_type => 'photoalbum'},
					name => 'photoalbums',
				},
			},
			{
				plugin => 'Node::Stash',
				in => {
					method => 'parents',
					params => {base_type => 'usergroup'},
					name => 'parents',
				},
			},
			{
				plugin => 'Node::Stash',
				in => {
					container => 'stash',
					nodes => 'parents',
					method => 'children',
					params => {base_type => 'photoalbum'},
					name => 'groupalbums',
				},
			},
			{
				plugin => 'Node::Stitch',
				in => {
					nodes => [qw/photoalbums groupalbums/],
					path => qq{children(base_type => 'photoalbum')},
					name => 'albums',
				},
			},
		],
		paths => {
			upload => [
				{
					plugin => 'Findnode',
					in => {
						id => 'workalbum_id',
					},
				},
				{
					plugin => 'File::Upload',
					in => {
						parent_id => 'workalbum_id',
					},
				},
			],
		},
		html_templates => {
			upload => 'upload',
		},
	};
	say STDERR Dumper( JSON->new->encode($data));
	update_node('person', $data);
}

sub update_album_recipe {
	my $data = {
		steps => [
			{
				plugin => 'Filter::Request',
				in => {
					method => 'POST',
					content_type => 'application/json',
				},
			},
			{
				plugin => 'Node::MoveTo',
				in => {
					child_id => 'content.photo_id',
				},
			},
		],
		html_templates => {
			upload => 'upload',
		},
	};
	say STDERR Dumper( JSON->new->encode($data));
	update_node('photoalbum', $data);
}

sub update_node {
	my ($basetype, $recipe) = @_;
	my $c = Jet::Context->instance;
	my $schema = $c->schema;
	$schema->update_basetype({name => $basetype}, {recipe => $recipe});
	say STDERR Dumper $recipe, $schema->find_basetype({name => 'domain'});
}

update_person_recipe;
update_album_recipe;